Subject: [PATCH] bcma-hcd: add support for controlling bus power through GPIO

Signed-off-by: Felix Fietkau <nbd@openwrt.org>
---
--- a/drivers/usb/host/bcma-hcd.c
+++ b/drivers/usb/host/bcma-hcd.c
@@ -23,6 +23,8 @@
 #include <linux/platform_device.h>
 #include <linux/module.h>
 #include <linux/slab.h>
+#include <linux/of.h>
+#include <linux/of_gpio.h>
 #include <linux/usb/ehci_pdriver.h>
 #include <linux/usb/ohci_pdriver.h>
 
@@ -205,7 +207,38 @@ static void bcma_hcd_init_chip_arm(struc
 	iounmap(dmu);
 }
 
+static void bcma_hci_platform_power_gpio(struct platform_device *dev, bool val)
+{
+	int gpio;
+
+	gpio = of_get_named_gpio(dev->dev.of_node, "vcc-gpio", 0);
+	if (!gpio_is_valid(gpio))
+		return;
+
+	if (val) {
+		gpio_request(gpio, "bcma-hcd-gpio");
+		gpio_set_value(gpio, 1);
+	} else {
+		gpio_set_value(gpio, 0);
+		gpio_free(gpio);
+	}
+}
+
+static int bcma_hci_platform_power_on(struct platform_device *dev)
+{
+	bcma_hci_platform_power_gpio(dev, true);
+	return 0;
+}
+
+static void bcma_hci_platform_power_off(struct platform_device *dev)
+{
+	bcma_hci_platform_power_gpio(dev, false);
+}
+
 static const struct usb_ehci_pdata ehci_pdata = {
+    .power_on =		bcma_hci_platform_power_on,
+    .power_suspend =	bcma_hci_platform_power_off,
+    .power_off =	bcma_hci_platform_power_off,
 };
 
 static const struct usb_ohci_pdata ohci_pdata = {
@@ -233,6 +266,7 @@ static struct platform_device *bcma_hcd_
 
 	hci_dev->dev.parent = &dev->dev;
 	hci_dev->dev.dma_mask = &hci_dev->dev.coherent_dma_mask;
+	hci_dev->dev.of_node = dev->dev.of_node;
 
 	ret = platform_device_add_resources(hci_dev, hci_res,
 					    ARRAY_SIZE(hci_res));
