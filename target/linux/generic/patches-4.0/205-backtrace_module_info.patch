--- a/lib/vsprintf.c
+++ b/lib/vsprintf.c
@@ -614,10 +614,12 @@ static noinline_for_stack
 char *symbol_string(char *buf, char *end, void *ptr,
 		    struct printf_spec spec, const char *fmt)
 {
+#ifndef CONFIG_KALLSYMS
+	struct module *mod;
+#endif
 	unsigned long value;
-#ifdef CONFIG_KALLSYMS
 	char sym[KSYM_SYMBOL_LEN];
-#endif
+	int len;
 
 	if (fmt[1] == 'R')
 		ptr = __builtin_extract_return_addr(ptr);
@@ -631,13 +633,15 @@ char *symbol_string(char *buf, char *end
 	else
 		sprint_symbol_no_offset(sym, value);
 
-	return string(buf, end, sym, spec);
 #else
-	spec.field_width = 2 * sizeof(void *);
-	spec.flags |= SPECIAL | SMALL | ZEROPAD;
-	spec.base = 16;
+	len = snprintf(sym, sizeof(sym), "0x%lx", value);
+
+	mod = __module_address(value);
+	if (mod)
+		snprintf(sym + len, sizeof(sym) - len, " [%s@%p+0x%x]",
+			 mod->name, mod->module_core, mod->core_size);
 
-	return number(buf, end, value, spec);
+	return string(buf, end, sym, spec);
 #endif
 }
 
