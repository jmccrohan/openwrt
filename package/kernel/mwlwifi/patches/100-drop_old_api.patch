--- a/main.c
+++ b/main.c
@@ -414,11 +414,7 @@ static void mwl_set_ht_caps(struct mwl_p
 	band->ht_cap.cap |= IEEE80211_HT_CAP_SGI_20;
 	band->ht_cap.cap |= IEEE80211_HT_CAP_SGI_40;
 
-#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 2, 0)
-	hw->flags |= IEEE80211_HW_AMPDU_AGGREGATION;
-#else
 	ieee80211_hw_set(hw, AMPDU_AGGREGATION);
-#endif
 	band->ht_cap.ampdu_factor = IEEE80211_HT_MAX_AMPDU_64K;
 	band->ht_cap.ampdu_density = IEEE80211_HT_MPDU_DENSITY_4;
 
@@ -520,21 +516,13 @@ static int mwl_wl_init(struct mwl_priv *
 	hw->queues = SYSADPT_TX_WMM_QUEUES;
 
 	/* Set rssi values to dBm */
-#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 2, 0)
-	hw->flags |= IEEE80211_HW_SIGNAL_DBM | IEEE80211_HW_HAS_RATE_CONTROL;
-#else
 	ieee80211_hw_set(hw, SIGNAL_DBM);
 	ieee80211_hw_set(hw, HAS_RATE_CONTROL);
-#endif
 
 	/* Ask mac80211 not to trigger PS mode
 	 * based on PM bit of incoming frames.
 	 */
-#if LINUX_VERSION_CODE < KERNEL_VERSION(4, 2, 0)
-	hw->flags |= IEEE80211_HW_AP_LINK_PS;
-#else
 	ieee80211_hw_set(hw, AP_LINK_PS);
-#endif
 
 	hw->vif_data_size = sizeof(struct mwl_vif);
 	hw->sta_data_size = sizeof(struct mwl_sta);
